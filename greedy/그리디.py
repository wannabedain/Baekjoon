# -*- coding: utf-8 -*-
"""그리디.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1obqTlXT1mF4w3KqV9KTK60C0vDpcxPia

# 당장 좋은 것만 선택하는 그리디

## 예제 3-1 거스름돈
- 가장 큰 화폐 단위부터 돈을 거슬러 주는 것
- 시간의 복잡도 O(k)
"""

N = int(input())

m_cnt = 0

moneys = [500,100,50,10]
for money in moneys : 
  m_cnt += N // money
  N %= money

print(m_cnt)

"""## [실전] 큰 수의 법칙"""

## 문제 이해 잘못해서 푼거
# N개의 숫자 중 큰 수를 최대 k번만만 반복하고, 최종 M번을 더하는 거라고 잘못 이해함

N, M, K = map(int, input().split())


data = list(map(int, input().split()))
data = sorted(data, reverse=True)


cnt = 0 # 몇번을 더하는지
num = 0 # 더한 값 


while cnt <= M:
  for i in data :
    cnt_p = 1
    if (cnt_p <= K) & (cnt <= M):
      for j in range(K) :
        num += i
        cnt += 1
        cnt_p += 1
        print(num)
      
  else : 
    break

print(num)



"""## [실전] 숫자 카드 게임"""

import numpy as np

N, M = map(int, input().split())

min_N = []
for i in range(N):
    data = list(map(int, input().split()))
    min_N.append(min(data))

max_val = np.max(list(map(int, min_N)))
print(max_val)



"""## [실전] 1이 될 때까지
### 어떤 수 N이 1일 될 때까지의 다음의 두 과정 중 하나를 반복적으로 선택하여 수행
  - 단, 두번째 연산 N이 K로 나누어떨어질 때만 선택 가능
  - 1. N에서 1을 뺀다.
  - 2. N을 K로 나눈다.

#### ex
- N이 1보다 큰 경우! 나머지가 0이면, 그냥 계속 나눠서 그 나눈 횟수를 +1
- N이 1보다        ! 나머지가 0이 아니면, 그 나머지 만큼 횟수를 더하고, 그 나머지 만큼 빼줘서 N을 0으로 만듬 끝~!
"""

N, K = map(int, input().split())

cnt = 0

while N > 1:
    if N % K == 0:
        N //= K
        cnt += 1
    else:
        cnt += N % K
        N -= N % K

print(cnt)



"""## 01. 모험가 길드 
### 여행을 떠날 수 있는 그룹 수의 최대 값 구하기
** 값은 공포도(그룹의 최소 인원 수)를 의미
  * 2) data 리스트를 크기가 작은은 순서대로 정렬한 다음에 가장 작은 값은 구하고, 그 값의 공포도 순서에 있는 값 찾음. 걔가 3이면, 2가 아니라 3이 기준이 되어야 하므로. max_val로 생각해 바꿔줌
  
  * 3) 팀을 이뤘다고 생각해 del 지워줌 / 팀 수(cnt) +1 
"""

N = int(input())
data = list(map(int, input().split()))

data = sorted(data)

cnt = 0

while len(data) > 1: 
  min_val = min(data)
  max_val =  data[min_val-1]
  if (len(data) >=  max_val) :
    del data[:max_val]
    cnt += 1

  else:
    break

print(cnt)



"""## 02. 곱하기 혹은 더하기
- 숫자로만 이루어진 문자열 S가 주어졌을 대, 가장 큰 수를 구하는 프로그램

"""

data = input()

result = int(data[0])

for i in range(1,len(data)):
  num = int(data[i])
  if num <= 1 or result <= 1:
    result += num
  else:
    result *= num

print(result)

